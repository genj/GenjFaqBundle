<?xml version="1.0" encoding="UTF-8"?>
<!-- Set some basic project information and targets -->
<project name="GenjFaqBundle" default="build">
    <property name="dir.src" value="${project.basedir}/src" />

    <target name="build" depends="prepare, lint, composer, phpunit, phpcs, phpdoc, pdepend, phpcb, phpcpd, phploc, phpmd"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="build/coverage"/>
        <delete dir="build/logs"/>
        <delete dir="build/api"/>
        <delete dir="build/docs"/>
        <delete dir="build/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="build/coverage"/>
        <mkdir dir="build/logs"/>
        <mkdir dir="build/api"/>
        <mkdir dir="build/docs"/>
        <mkdir dir="build/pdepend"/>
    </target>

    <target name="lint" depends="prepare" description="Perform syntax check of sourcecode files">
        <phplint level="info">
            <fileset dir=".">
                <include name="**/*.php"/>
                <exclude name="**/vendor/**"/>
            </fileset>
        </phplint>
    </target>

    <target name="composer">
        <exec executable="wget" passthru="true">
            <arg line="-Ocomposer.phar" />
            <arg line="http://getcomposer.org/composer.phar"/>
        </exec>
        <exec executable="php" passthru="true">
            <arg line="composer.phar"/>
            <arg line="update"/>
            <arg line="--dev"/>
        </exec>
    </target>

    <target name="phpunit">
        <exec executable="php" checkreturn="true" passthru="true">
            <arg line="vendor/bin/phpunit"/>
            <arg line="--verbose"/>
        </exec>
    </target>

    <target name="phpcs" description="Run PHP_CodeSniffer">
        <exec executable="vendor/bin/phpcs" passthru="true">
            <arg line="--report=checkstyle"/>
            <arg line="--report-file=build/logs/checkstyle.xml"/>
            <arg line="--standard=PSR2"/>
            <arg path="${dir.src}"/>
        </exec>
    </target>

    <target name="phpdoc" description="Run phpDocumentor">
        <exec executable="php" passthru="true">
            <arg line="vendor/bin/phpdoc"/>
            <arg line="-d '${dir.src}'"/>
            <arg line="-t 'build/docs'"/>
        </exec>
    </target>

    <target name="pdepend" description="Run PHP_Depend">
        <exec executable="vendor/bin/pdepend" passthru="true">
            <arg line="--jdepend-xml=build/logs/jdepend.xml"/>
            <arg line="--jdepend-chart=build/pdepend/dependencies.svg"/>
            <arg line="--overview-pyramid=build/pdepend/overview-pyramid.svg"/>
            <arg path="${dir.src}" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="vendor/bin/phpcb" passthru="true">
            <arg line="--log build/logs"/>
            <arg line="--source ${dir.src}"/>
            <arg line="--output build/code-browser"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="vendor/bin/phpcpd" passthru="true">
            <arg line="--log-pmd build/logs/pmd-cpd.xml"/>
            <arg path="${dir.src}"/>
        </exec>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="vendor/bin/phploc" passthru="true">
            <arg line="--log-csv build/logs/phploc.csv"/>
            <arg path="${dir.src}"/>
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="vendor/bin/phpmd" passthru="true">
            <arg path="${dir.src}"/>
            <arg line="xml"/>
            <arg line="codesize,design,naming,unusedcode"/>
            <arg line="--reportfile build/logs/pmd.xml"/>
        </exec>
    </target>
</project>
